version: '3.8'

services:
  # API Service
  api:
    build:
      context: .
      dockerfile: API/Dockerfile
      args:
        BUILD_DATE: ${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
    container_name: h2-api-mags
    ports:
      - "8053:8080"
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - DOTNET_USE_POLLING_FILE_WATCHER=1
      - DOTNET_RUNNING_IN_CONTAINER=true
    networks:
      - h2-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/status/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Blazor WASM App
  blazor:
    build:
      context: .
      dockerfile: Blazor/Dockerfile
      args:
        BUILD_DATE: ${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        VCS_REF: ${VCS_REF:-$(git rev-parse --short HEAD 2>/dev/null || echo 'unknown')}
        API_ENDPOINT: http://api:8080/
    container_name: h2-blazor-mags
    ports:
      - "8054:80"
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - API_ENDPOINT=http://api:8080/
    depends_on:
      api:
        condition: service_healthy
    networks:
      - h2-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  h2-network:
    driver: bridge
